name: Build and deploy

on:
  push:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PERSONAL_NPM_TOKEN: ${{ secrets.PERSONAL_NPM_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    if: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install modules
        run: yarn

      - name: Build libs
        run: yarn build:lib

      - name: Eslint
        run: yarn lint

      - name: Build packages
        run: yarn build

      - name: Set path filter
        uses: dorny/paths-filter@v2
        id: path-filter
        with:
          filters: |
            common:
              - 'entries/common/**'
            ui:
              - 'entries/ui/**'
            blog-backend:
              - 'entries/blog-backend/**'

      - name: '@difuks/common version bump'
        uses: phips28/gh-action-bump-version@master
        if: steps.path-filter.outputs.common == 'true'
        with:
          minor-wording: 'feat(common)'
          patch-wording: 'fix(common)'
          skip-tag: 'true'
        env:
          PACKAGEJSON_DIR: entries/common

      - name: '@difuks/ui version bump'
        uses: phips28/gh-action-bump-version@master
        if: steps.path-filter.outputs.ui == 'true'
        env:
          PACKAGEJSON_DIR: entries/ui
        with:
          minor-wording: 'feat(ui)'
          patch-wording: 'fix(ui)'
          skip-tag: 'true'

      - name: '@difuks/blog-backend version bump'
        uses: 'phips28/gh-action-bump-version@master'
        if: steps.path-filter.outputs.blog-backend == 'true'
        env:
          PACKAGEJSON_DIR: entries/blog-backend
        with:
          minor-wording: 'feat(blog-backend)'
          patch-wording: 'fix(blog-backend)'
          skip-tag: 'true'

      - name: '@difuks/common publish'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.PERSONAL_NPM_TOKEN }}
          package: entries/common/package.json
          registry: https://npm.pkg.github.com

      - name: '@difuks/ui publish'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.PERSONAL_NPM_TOKEN }}
          package: entries/ui/package.json
          registry: https://npm.pkg.github.com

      - name: '@difuks/blog-backend publish'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.PERSONAL_NPM_TOKEN }}
          package: entries/blog-backend/package.json
          registry: https://npm.pkg.github.com

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Node build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.docker/node/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fuks-blog:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Nginx build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.docker/nginx/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fuks-blog-nginx:latest

  deploy:
    name: Deploy

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy single file to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: .github/workflows/.deploy.sh
          remote: /fuks-blog/.deploy.sh
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Pull and run docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            export PERSONAL_NPM_TOKEN=${{ secrets.PERSONAL_NPM_TOKEN }}
            bash /fuks-blog/.deploy.sh

  notification:
    name: Notification

    needs: [build,deploy]

    runs-on: ubuntu-latest

    if: always()

    steps:
      - name: Send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            Build: ${{ needs.build.result }}
            Deploy: ${{ needs.deploy.result }}
